--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: 
  - !ruby/object:RI::MethodSummary 
    name: autotest
  - !ruby/object:RI::MethodSummary 
    name: fix
  - !ruby/object:RI::MethodSummary 
    name: new
comment: 
  - !ruby/struct:SM::Flow::P 
    body: ZenTest scans your target and unit-test code and writes your missing code based on simple naming rules, enabling XP at a much quicker pace. ZenTest only works with Ruby and Test::Unit.
  - !ruby/struct:SM::Flow::H 
    level: 2
    text: RULES
  - !ruby/struct:SM::Flow::P 
    body: "ZenTest uses the following rules to figure out what code should be generated:"
  - !ruby/object:SM::Flow::LIST 
    contents: 
      - !ruby/struct:SM::Flow::LI 
        label: "*"
        body: "Definition:"
      - !ruby/object:SM::Flow::LIST 
        contents: 
          - !ruby/struct:SM::Flow::LI 
            label: "*"
            body: CUT = Class Under Test
          - !ruby/struct:SM::Flow::LI 
            label: "*"
            body: TC = Test Class (for CUT)
        type: :BULLET
      - !ruby/struct:SM::Flow::LI 
        label: "*"
        body: TC's name is the same as CUT w/ &quot;Test&quot; prepended at every scope level.
      - !ruby/object:SM::Flow::LIST 
        contents: 
          - !ruby/struct:SM::Flow::LI 
            label: "*"
            body: "Example: TestA::TestB vs A::B."
        type: :BULLET
      - !ruby/struct:SM::Flow::LI 
        label: "*"
        body: CUT method names are used in CT, with &quot;test_&quot; prependend and optional &quot;_ext&quot; extensions for differentiating test case edge boundaries.
      - !ruby/object:SM::Flow::LIST 
        contents: 
          - !ruby/struct:SM::Flow::LI 
            label: "*"
            body: "Example:"
          - !ruby/object:SM::Flow::LIST 
            contents: 
              - !ruby/struct:SM::Flow::LI 
                label: "*"
                body: A::B#blah
              - !ruby/struct:SM::Flow::LI 
                label: "*"
                body: TestA::TestB#test_blah_normal
              - !ruby/struct:SM::Flow::LI 
                label: "*"
                body: TestA::TestB#test_blah_missing_file
            type: :BULLET
        type: :BULLET
      - !ruby/struct:SM::Flow::LI 
        label: "*"
        body: All naming conventions are bidirectional with the exception of test extensions.
    type: :BULLET
  - !ruby/struct:SM::Flow::P 
    body: See ZenTestMapping for documentation on method naming.
constants: 
  - !ruby/object:RI::Constant 
    comment: 
    name: VERSION
    value: "'4.2.1'"
full_name: ZenTest
includes: 
  - !ruby/object:RI::IncludedModule 
    name: ZenTestMapping
instance_methods: 
  - !ruby/object:RI::MethodSummary 
    name: add_missing_method
  - !ruby/object:RI::MethodSummary 
    name: analyze
  - !ruby/object:RI::MethodSummary 
    name: analyze_impl
  - !ruby/object:RI::MethodSummary 
    name: analyze_test
  - !ruby/object:RI::MethodSummary 
    name: convert_class_name
  - !ruby/object:RI::MethodSummary 
    name: create_method
  - !ruby/object:RI::MethodSummary 
    name: generate_code
  - !ruby/object:RI::MethodSummary 
    name: get_class
  - !ruby/object:RI::MethodSummary 
    name: get_inherited_methods_for
  - !ruby/object:RI::MethodSummary 
    name: get_methods_for
  - !ruby/object:RI::MethodSummary 
    name: is_test_class
  - !ruby/object:RI::MethodSummary 
    name: load_file
  - !ruby/object:RI::MethodSummary 
    name: methods_and_tests
  - !ruby/object:RI::MethodSummary 
    name: missing_methods
  - !ruby/object:RI::MethodSummary 
    name: process_class
  - !ruby/object:RI::MethodSummary 
    name: result
  - !ruby/object:RI::MethodSummary 
    name: scan_files
  - !ruby/object:RI::MethodSummary 
    name: test_to_normal
name: ZenTest
superclass: Object
